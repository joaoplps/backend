	PROGRAMAÇÃO ORIENTADA A OBJETOS
	João Pedro LPS


Objetos e Classes

		Classe define Objeto de características e comportamentos
	diferentes. Os métodos alteram características.
		. Atributos - Características de um Objeto;
		. Métodos - Definem comportamentos (funções, rotinas);
	
	Ex.: Pessoa:Classe
		Atributos: Nome, Idade, Peso, Altura;
		Métodos: fazer_aniversário(); -> Muda o atributo Idade;
	
	Linguagens:
		- Compiladas - Compiladores específicos para cada ambiente;
		- Interpretadas - Compila em um tradutor que trabalha com
		diferentes ambientes;
	
		Java não é uma linguagem, e sim uma plataforma. Possue as
	seguintes divisões:
	
		J2SE Standard Edition
		J2EE Enterprise Edition - Pacotes Empresariais (módulos);
		J2ME Micro Edition - Telefonia, etc;
		Java Web Services
		Java Fx - Efeitos Sonoros
	
		Esta plataforma é composta por dois instrumentos:
		
							 Runtime Environment
					 JDK + JRE
				Dev Kit


Código e Sintaxe

	Variáveis Primitivas
		. int idade = 10;
		. float valor = 1.5;
		. double							(aceita int e float)
		. char letra = 'a';
		. boolean verdade = true;	(verdadeiro ou falso)
		. String nome = "João";		(não é primitiva, cabem textos)
	
		Escrita básica na tela:
	
public class Hello{									//Projeto;
	public void static main(String[] args){	//Método Principal;
		System.out.println("Yeah!");				//Execução.
		
	}
}
	
		Na linguagem Java, é possível atribuir o valor de um tipo de
	variável a outro tipo de variável, apontando a operação ao
	compilador. Este processo é chamado de CASTING:
	
	int num;
	num = (int) 1.234;

	- Controle de fluxo SWITCH CASE e Entrada de Dados:
			Switch case Verifica variável e age de acordo com os casos
		(escolha-caso). Importante não esquecer da linha "break;" para
		parar a execução quando o teste for verdadeiro. A linha "default"
		executa se nenhum teste for verdade. Para a entrada de dados
		é necessário importar a biblioteca Scanner, que é um método
		consultor.
	
Classe String
	
		Não há limite de tamanho, e suas variáveis guardam referências
	para objetos (espaços na memória)e não valores. Criação com new:
	
			String x = new String("Segunda-Feira");
			String y = new String("Segunda-Feira");
			
		Se compararmos as variáveis x e y (x==y) criadas com "new String",
	estaríamos comparando os endereços de memória, e a expressão
	retornaria False. Se os elementos fossem atribuídos sem o "new String",
	o java retornaria a expressão como True. O método "equals" alcança os
	valores dentro das referências:
	
			if(x.equals(y)){System.out.println("X e Y são iguais.");}
			else{System.out.println("X e Y são diferentes.");}
			
			
Vamos à prática.
Comece pelo arquivo chamado 101poo.java, abra-o no editor de texto de sua preferência
e leia a documentação inclusa no código para acompanhar o passo a passo e complete a
lista.

JPLPS
